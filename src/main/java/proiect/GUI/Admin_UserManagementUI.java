/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package proiect.GUI;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import proiect.DatabaseTables.Users;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ItemEvent;
import java.io.IOException;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;


public class Admin_UserManagementUI extends javax.swing.JDialog {

    private Long selectedUserId;
    private boolean userFound=false;
    /**
     * Creates new form Admin_UserManagementUI
     */
    public Admin_UserManagementUI(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        searchEmailField = new javax.swing.JTextField();
        searchPhoneNumberField = new javax.swing.JTextField();
        JButton findUserButton = new JButton();
        JLabel phoneNumberLabel = new JLabel();
        phoneNumberField = new javax.swing.JTextField();
        JLabel jLabel10 = new JLabel();
        JLabel jLabel11 = new JLabel();
        emailField = new javax.swing.JTextField();
        firstNameField = new javax.swing.JTextField();
        lastNameField = new javax.swing.JTextField();
        JLabel jLabel6 = new JLabel();
        searchUserIDField = new javax.swing.JTextField();
        JRadioButton jRadioButton3 = new JRadioButton();
        JLabel jLabel1 = new JLabel();
        JSeparator jSeparator1 = new JSeparator();
        JButton updateUserButton = new JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jRadioButton1.setText("Email");

        jRadioButton2.setText("Phone number");

        searchPhoneNumberField.addActionListener(this::searchPhoneNumberFieldActionPerformed);

        findUserButton.setText("Find user");

        phoneNumberLabel.setText("Phone number");

        jLabel10.setText("Last name");

        jLabel11.setText("First name");

        emailField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        emailField.setToolTipText("Enter your email here");

        firstNameField.setToolTipText("Your first name");

        lastNameField.setToolTipText("Your last name");
        lastNameField.addActionListener(this::lastNameFieldActionPerformed);

        // Create a button group and add the radio buttons to it
        ButtonGroup searchTypeGroup = new ButtonGroup();
        searchTypeGroup.add(jRadioButton1);
        searchTypeGroup.add(jRadioButton2);
        searchTypeGroup.add(jRadioButton3);

        jLabel6.setText("Email");

        jRadioButton1.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                clearFields();
            }
        });

        jRadioButton2.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                clearFields();
            }
        });

        jRadioButton3.addItemListener(e -> {
            if (e.getStateChange() == ItemEvent.SELECTED) {
                clearFields();
            }
        });

        searchUserIDField.addActionListener(this::searchUserIDFieldActionPerformed);

        jRadioButton3.setText("User ID");
        jRadioButton3.addActionListener(this::jRadioButton3ActionPerformed);

        jLabel1.setText("Search user by:");

        updateUserButton.setText("Update user");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jSeparator1)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(51, 51, 51)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addComponent(findUserButton)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addGroup(layout.createSequentialGroup()
                                                                        .addComponent(jRadioButton1)
                                                                        .addGap(132, 132, 132)
                                                                        .addComponent(searchEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                        .addComponent(jRadioButton3)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(searchUserIDField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                                        .addComponent(jRadioButton2)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(searchPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(52, 52, 52)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(phoneNumberLabel))
                                                .addGap(54, 54, 54)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(phoneNumberField)
                                                                .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(195, 195, 195)
                                                .addComponent(updateUserButton)))
                                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jRadioButton1)
                                        .addComponent(searchEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(searchPhoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jRadioButton2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jRadioButton3)
                                        .addComponent(searchUserIDField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addComponent(findUserButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(emailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel6))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(firstNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lastNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(phoneNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(phoneNumberLabel))
                                .addGap(45, 45, 45)
                                .addComponent(updateUserButton)
                                .addGap(79, 79, 79))
        );

        findUserButton.addActionListener(e -> {
            // Determine the search type
            String searchType;
            if (jRadioButton1.isSelected()) {
                searchType = "email";
            } else if (jRadioButton2.isSelected()) {
                searchType = "phone";
            } else {
                searchType = "id";
            }

            // Retrieve the search term
            String searchTerm;
            if (searchType.equals("email")) {
                searchTerm = searchEmailField.getText();
            } else if (searchType.equals("phone")) {
                searchTerm = searchPhoneNumberField.getText();
            } else {
                searchTerm = searchUserIDField.getText();
            }

            // Construct the endpoint URL
            String endpoint = "http://localhost:8080/users/" + searchType + "/" + searchTerm;

            // Make the HTTP request
            HttpClient client = HttpClient.newHttpClient();
            HttpRequest request = HttpRequest.newBuilder()
                    .uri(URI.create(endpoint))
                    .GET()
                    .build();
            try {
                HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

                if (response.statusCode() == 200) {
                    // Parse the response body
                    ObjectMapper mapper = new ObjectMapper();
                    Users user = mapper.readValue(response.body(), Users.class);
                    selectedUserId = user.getId();
                    userFound=true;
                    // Populate the UI fields
                    emailField.setText(user.getEmail());
                    firstNameField.setText(user.getFirstName());
                    lastNameField.setText(user.getLastName());
                    phoneNumberField.setText(user.getPhoneNumber());
                } else {
                    JOptionPane.showMessageDialog(null, "User not found");
                }
            } catch (IOException | InterruptedException ex) {
                JOptionPane.showMessageDialog(null, "Error retrieving user data");
            }
        });
        updateUserButton.addActionListener(e -> updateUserButton());
        pack();
    }

    private void clearFields() {
        emailField.setText("");
        firstNameField.setText("");
        lastNameField.setText("");
        phoneNumberField.setText("");
        searchPhoneNumberField.setText("");
        searchEmailField.setText("");
        searchUserIDField.setText("");
    }


    private void updateUserButton() {
        // Check if a user has been found
        if (!userFound) {
            JOptionPane.showMessageDialog(null, "Please find a user to update first");
            return;
        }

        // Get the user ID

        // Get the user data from the form fields
        String email = emailField.getText();
        String firstName = firstNameField.getText();
        String lastName = lastNameField.getText();
        String phoneNumber = phoneNumberField.getText();

        // Validate form fields
        if (email.isEmpty() || firstName.isEmpty() || lastName.isEmpty() || phoneNumber.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill in all required fields");
            return;
        }

        // Validate email address
        if (!email.matches("^[\\w-.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
            JOptionPane.showMessageDialog(null, "Invalid email address");
            return;
        }

        // Validate phone number
        if (!phoneNumber.matches("\\d+")) {
            JOptionPane.showMessageDialog(null, "Phone number must contain digits only");
            return;
        }

        // Create a new user object
        Users user = new Users();
        user.setEmail(email);
        user.setFirstName(firstName);
        user.setLastName(lastName);
        user.setPhoneNumber(phoneNumber);

        // Send an HTTP PUT request to update the user in the backend
        Long userId = selectedUserId;
        String endpoint = "http://localhost:8080/users/update/" + userId;
        ObjectMapper mapper = new ObjectMapper();
        String requestBody;
        try {
            requestBody = mapper.writeValueAsString(user);
        } catch (JsonProcessingException ex) {
            JOptionPane.showMessageDialog(null, "Error processing user data");
            return;
        }
        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(URI.create(endpoint))
                .header("Content-Type", "application/json")
                .PUT(HttpRequest.BodyPublishers.ofString(requestBody))
                .build();
        try {
            HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

            if (response.statusCode() == 200) {
                // Update the UI to reflect the updated user information
                JOptionPane.showMessageDialog(null, "User updated successfully");
                clearFields();
            } else {
                JOptionPane.showMessageDialog(null, "Error updating user");
            }
        } catch (IOException | InterruptedException ex) {
            JOptionPane.showMessageDialog(null, "Error communicating with the server");
        }
    }


    //GEN-LAST:event_jRadioButton1ActionPerformed

    private void lastNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lastNameFieldActionPerformed

    private void searchPhoneNumberFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchPhoneNumberFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchPhoneNumberFieldActionPerformed

    private void searchUserIDFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserIDFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchUserIDFieldActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException |
                 UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Admin_UserManagementUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            Admin_UserManagementUI dialog = new Admin_UserManagementUI(new JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField emailField;
    private javax.swing.JTextField firstNameField;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JTextField lastNameField;
    private javax.swing.JTextField phoneNumberField;
    private javax.swing.JTextField searchEmailField;
    private javax.swing.JTextField searchPhoneNumberField;
    private javax.swing.JTextField searchUserIDField;
    // End of variables declaration//GEN-END:variables
}
